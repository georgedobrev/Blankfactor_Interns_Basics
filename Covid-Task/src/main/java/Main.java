import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import java.io.FileWriter;import java.io.IOException;import java.sql.*;import java.time.LocalDateTime;import java.time.format.DateTimeFormatter;import java.util.Scanner;public class Main {    public static void printAllData() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            System.out.println("Information is from: " + dtf.format(now));            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            System.out.println();            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String createTableQuery = "CREATE TABLE IF NOT EXISTS covid_data ("                    + "region TEXT, country TEXT, total_cases TEXT, total_tests TEXT, active_cases TEXT)";            connection.createStatement().execute(createTableQuery);            String insertQuery = "INSERT INTO covid_data (region, country, total_cases, total_tests, active_cases) "                    + "VALUES (?, ?, ?, ?, ?)";            PreparedStatement statement = connection.prepareStatement(insertQuery);            for (Element row : table.select("tr:gt(7)")) {                Elements tds = row.select("td:not([rowspan])");                Element region = row.selectFirst("td[style*=display:none]");                String regionText = region.text();                String country = tds.get(1).text();                String totalCases = tds.get(2).text();                String totalTests = tds.get(12).text();                String activeCases = tds.get(8).text();                statement.setString(1, regionText);                statement.setString(2, country);                statement.setString(3, totalCases);                statement.setString(4, totalTests);                statement.setString(5, activeCases);                statement.executeUpdate();                System.out.println("Region " + regionText + ", Country: " + country + ", Total cases: " + totalCases + ", Total tests: " + totalTests + ", Active cases: " + activeCases);            }            statement.close();            connection.close();        } catch (SQLException e) {            e.printStackTrace();        } catch (IOException e) {            throw new RuntimeException(e);        }    }    public static void printOnlyByRegionEurope() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "Europe");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("europe.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to europe.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void printOnlyByRegionAsia() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "Asia");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("asia.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to asia.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void printOnlyByRegionAustralia_Oceania() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "Australia/Oceania");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("australia.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to australia.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void printOnlyByRegionNorthAmerica() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "North America");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("northAmerica.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to northAmerica.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void printOnlyByRegionSouthAmerica() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "South America");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("SouthAmerica.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to SouthAmerica.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void printOnlyByRegionAfrica() {        try {            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");            LocalDateTime now = LocalDateTime.now();            String timeStamp = dtf.format(now);            String url = "https://www.worldometers.info/coronavirus/";            Document doc = Jsoup.connect(url).timeout(6000).get();            Elements table = doc.select("table[id=main_table_countries_today]");            Connection connection = DriverManager.getConnection("jdbc:sqlite:./coviddb.db");            String query = "SELECT * FROM covid_data WHERE region = ?";            PreparedStatement statement = connection.prepareStatement(query);            statement.setString(1, "Africa");            ResultSet resultSet = statement.executeQuery();            StringBuilder csvData = new StringBuilder();            csvData.append("Region,Country,Total Cases,Total Tests,Active Cases\n");            while (resultSet.next()) {                String region = resultSet.getString("region");                String country = resultSet.getString("country");                String totalCases = resultSet.getString("total_cases");                String totalTests = resultSet.getString("total_tests");                String activeCases = resultSet.getString("active_cases");                csvData.append(region).append(",").append(country).append(",")                        .append(totalCases).append(",").append(totalTests).append(",")                        .append(activeCases).append("\n");            }            statement.close();            connection.close();            FileWriter fileWriter = new FileWriter("data_africa.csv");            fileWriter.write(csvData.toString());            fileWriter.close();            System.out.println("Data written to data_africa.csv");        } catch (SQLException | IOException e) {            e.printStackTrace();        }    }    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        System.out.println("Please select a region:");        System.out.println("1. Europe");        System.out.println("2. Asia");        System.out.println("3. Australia/Oceania");        System.out.println("4. North America");        System.out.println("5. South America");        System.out.println("6. Africa");        System.out.println("7. Print all data");        int choice = scanner.nextInt();        switch (choice) {            case 1:                printOnlyByRegionEurope();                break;            case 2:                printOnlyByRegionAsia();                break;            case 3:                printOnlyByRegionAustralia_Oceania();                break;            case 4:                printOnlyByRegionNorthAmerica();                break;            case 5:                printOnlyByRegionSouthAmerica();                break;            case 6:                printOnlyByRegionAfrica();                break;            case 7: printAllData();            default:                System.out.println("Invalid choice");                break;        }    }    }